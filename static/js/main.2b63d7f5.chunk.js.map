{"version":3,"sources":["serviceWorker.ts","contexts/UserContext.tsx","theme.ts","urls.ts","components/Typography/index.ts","components/Layout/index.tsx","hooks/UseScrollPosition.ts","components/AnimatedContentWrapper/styles.ts","components/AnimatedContentWrapper/index.tsx","components/RobotAnimation/styles.ts","components/RobotAnimation/index.tsx","pages/Home/index.tsx","components/Button/styles.ts","components/Button/index.tsx","components/TextInput/styles.ts","components/TextInput/index.tsx","components/UserCard/styles.ts","components/UserCard/index.tsx","components/UserCard/UserCardLoading.tsx","components/Carousel/styles.ts","components/Carousel/Dots.tsx","components/Carousel/index.tsx","components/ErrorMessage/styles.ts","components/ErrorMessage/index.tsx","pages/DesignSystem/styles.ts","pages/DesignSystem/index.tsx","utils/StringUtils.ts","hooks/useGetRequest.ts","utils/NumberUtils.ts","components/Users/index.tsx","containers/UsersContainer/index.tsx","components/Map/styles.ts","components/Map/index.tsx","pages/UsingAPIs/index.tsx","Routes.tsx","components/Header/styles.ts","components/HeaderNavLink/styles.ts","components/HeaderNavLink/index.tsx","components/Header/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","defaultState","users","selectedPosition","UserContext","React","createContext","UserProvider","children","useState","state","setState","Provider","value","fontSizes","extraTiny","tiny","small","medium","large","extraLarge","extraExtraLarge","extraExtraExtraLarge","colors","white","lightGrey","darkGrey","blue","pink","yellow","theme","breakpoints","globalPadding","spacing","baseText","props","color","textAlign","fontSize","bold","ellipsis","Span","styled","span","Paragraph","p","H1","h1","H2","h2","H3","h3","Block","div","ColorBlock","padding","VerticalSpacer","size","PageWrapper","PageContent","RowCenter","ContentWrapper","isBrowser","getScrollPosition","element","useWindow","x","y","target","current","document","body","position","getBoundingClientRect","top","left","scrollX","scrollY","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","ContentWrapperStyled","visible","AnimatedContentWrapper","hideOnScroll","setHideOnScroll","wrapperRef","isShow","innerHeight","ref","keyFrameWheelWobble","keyframes","keyFrameBodyRock","keyFrameArm","keyFrameHeadbop","keyFrameSignal","keyFrameEye","keyFrameJourney","ContentWrapperFloating","RobotWrapper","WholeRobot","Neck","Arial","BallEnd","Signal","RoboBody","Wheel1","Wheel2","WheelHub","Arm","ArmTop","Hand","Head","Face","EyeLeft","EyeRight","RobotAnimation","Home","href","ButtonStyled","button","undefined","Button","onClick","TextInputWrapper","LabelStyled","label","InputStyled","input","TextInput","name","labelText","required","placeholder","type","keyFrameLoadingGrowShirnk","UserCardWrapper","CoverColor","BottomHalf","ImageWrapper","ImageContainer","img","LoadingCoverColor","LoadingImageWrapper","LoadingH3","LoadingParagraph","AnimatedRows","UserCard","user","first","last","picture","email","street","city","postcode","src","number","UserCardLoading","CarouselWrapper","CarouselFadeOutLeft","CarouselFadeOutRight","CarouselScrollArea","CarouselCard","CarouselCardInner","isSelected","DotContainer","Dot","selected","Dots","count","currentPosition","scrollToPosition","Array","map","item","index","key","Carousel","onPositionChanged","setCurrentPositon","scrollRef","childArray","Children","toArray","filter","setPosition","to","handleScrollThrottled","_","throttle","width","scrollPosition","scrollTop","scrollLeft","Math","round","fadeRightVisible","length","fadeLeftVisible","onScroll","child","scrollTo","ErrorWrapper","ErrorMessage","errorMessage","retry","urls","TilesWrapper","FlexWrapRow","ColorTileWrapper","ColorTile","ColorLabelWrapper","colorLabelList","Object","keys","mockUser","coordinates","latitude","longitude","login","uuid","DesignSystem","text","result","replace","trim","charAt","toUpperCase","slice","camelCaseToCaptilalisedCase","useGetRequest","initialUrl","initialData","url","setUrl","data","setData","isLoading","setIsLoading","isError","setIsError","useEffect","a","axios","fetchData","scaleBetween","unscaledNum","minAllowed","maxAllowed","min","max","chooseColor","availableColours","themeColors","Users","useContext","dispatch","UsersContainer","results","lat","lng","transformCoords","MapWrapper","MarkerWrapper","MarkerImage","Marker","imageSrc","Map","selectedUser","newCenter","id","bootstrapURLKeys","center","defaultZoom","UsingAPIs","Routes","path","component","exact","from","HeaderWrapper","header","HeaderInner","Links","ul","HeaderLinkItem","li","HoverInidcator","NavLinkStyled","NavLink","HeaderNavLink","title","activeClassName","Header","HideOnScroll","useMemo","App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b63d7f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {\n    FunctionComponent,\n    useState,\n    Dispatch,\n    SetStateAction,\n} from 'react';\nimport { UserType } from 'src/containers/UsersContainer';\n\nexport type UserContextStateType = {\n    users: UserType[];\n    selectedPosition: number;\n};\n\nconst defaultState: UserContextStateType = {\n    users: [],\n    selectedPosition: 0,\n};\n\nexport type UserContextProviderType = [\n    UserContextStateType,\n    Dispatch<SetStateAction<UserContextStateType>>\n];\n\nexport const UserContext = React.createContext<UserContextProviderType>([\n    { ...defaultState },\n    () => {},\n]);\n\n// making a provider HOC here so I can keep all the state code in this\n// and not where ever this provider is used\nexport const UserProvider: FunctionComponent = ({ children }) => {\n    const [state, setState] = useState({ ...defaultState });\n    return (\n        <UserContext.Provider value={[state, setState]}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n","import { DefaultTheme } from 'styled-components';\n\nexport const fontSizes: { [key: string]: string } = {\n    extraTiny: '0.6.25rem',\n    tiny: '0.75rem',\n    small: '0.875rem',\n    medium: '1rem',\n    large: '1.125rem',\n    extraLarge: '1.25rem',\n    extraExtraLarge: '1.5rem',\n    extraExtraExtraLarge: '3rem',\n};\n\nexport const breakpoints = {\n    large: '1400px',\n};\n\nexport const globalPadding = '10vw';\n\nexport type SpacingType =\n    | 'tiny'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'extraLarge'\n    | 'extraExtraLarge';\n\nexport const spacing: { [key in SpacingType]: string } = {\n    tiny: '0.5rem',\n    small: '1rem',\n    medium: '1.5rem',\n    large: '3rem',\n    extraLarge: '4rem',\n    extraExtraLarge: '8rem',\n};\n\nexport type ColorType =\n    | 'white'\n    | 'darkGrey'\n    | 'lightGrey'\n    | 'blue'\n    | 'pink'\n    | 'yellow';\n\nexport const colors: { [key: string]: string } = {\n    white: '#F3F7F0',\n    lightGrey: '#d4d4d4',\n    darkGrey: '#343434',\n    blue: '#1B4965',\n    pink: '#A93F55',\n    yellow: '#FFC857',\n};\n\nconst theme: DefaultTheme = {\n    fontSizes,\n    breakpoints,\n    globalPadding,\n    spacing,\n    colors,\n};\n\nexport default theme;\n","// The only reason why everything is prefixed with '/showcase'\n// is to get react url router to play ball with github pages\nexport default {\n    home: '/showcase/',\n    designSystem: '/showcase/designSystem',\n    usingAPIs: '/showcase/usingAPIs',\n};\n","import styled from 'styled-components/macro';\nimport { colors, fontSizes } from 'src/theme';\n\ntype BaseTextProps = {\n    color?: string;\n    textAlign?: 'left' | 'right' | 'center';\n    fontSize?:\n        | 'extraTiny'\n        | 'tiny'\n        | 'small'\n        | 'medium'\n        | 'large'\n        | 'extraLarge'\n        | 'extraExtraLarge'\n        | 'extraExtraExtraLarge';\n    bold?: boolean;\n    ellipsis?: boolean;\n};\n\nconst baseText = (props: BaseTextProps) => `\n    font-family: 'Quicksand', sans-serif;\n    color: ${props.color ? colors[`${props.color}`] : colors.darkGrey};\n    text-align: ${props.textAlign ? props.textAlign : 'left'};\n    font-size: ${\n        props.fontSize ? fontSizes[`${props.fontSize}`] : fontSizes.medium\n    };\n    line-height: 1.5em;\n    font-weight: ${!!props.bold ? 700 : 400};\n    overflow: ${!!props.ellipsis ? 'hidden' : 'visible'}\n    text-overflow: ${!!props.ellipsis ? 'ellipsis' : 'unset'}\n`;\n\nexport const Span = styled.span`\n    ${(props: BaseTextProps) => baseText(props)}\n`;\n\nexport const Paragraph = styled.p`\n    ${(props: BaseTextProps) => baseText(props)}\n    max-width: 600px;\n`;\n\nexport const H1 = styled.h1`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraExtraExtraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraExtraExtraLarge)};\n`;\n\nexport const H2 = styled.h2`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    letter-spacing: -0.03rem;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraExtraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraExtraLarge)};\n`;\n\nexport const H3 = styled.h3`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    letter-spacing: -0.03rem;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraLarge)};\n    text-overflow: ellipsis;\n    overflow: hidden;\n`;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components/macro';\nimport { SpacingType, ColorType } from 'src/theme';\n\nconst Block = styled.div`\n    background-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { white },\n        },\n    }: {\n        theme: any;\n        color: ColorType;\n    }) => (color ? colors[`${color}`] : white)};\n`;\n\ntype BlockProps = {\n    color?: ColorType;\n    padding?: boolean;\n};\n\nexport const ColorBlock: FunctionComponent<BlockProps> = ({\n    color,\n    padding = true,\n    children,\n}) => {\n    return (\n        <Block color={color || 'white'}>\n            {padding && <VerticalSpacer size='extraLarge' />}\n            {children}\n            {padding && <VerticalSpacer size='extraExtraLarge' />}\n        </Block>\n    );\n};\n\nexport const PageWrapper = styled.div`\n    min-height: 100vh;\n    width: 100%;\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n`;\n\nexport const PageContent = styled.div`\n    width: 100%;\n    height: 100%;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n    margin: 0 auto;\n`;\n\nexport const Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n`;\n\nexport const RowCenter = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nexport const Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`;\nexport const ColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nexport const ContentWrapper = styled.div`\n    padding: ${({ theme: { globalPadding } }) => `0 ${globalPadding}`};\n`;\n\nexport const VerticalSpacer = styled.div`\n    height: ${({\n        size,\n        theme: {\n            spacing,\n            spacing: { medium },\n        },\n    }: {\n        size: SpacingType;\n        theme: any;\n    }) => (size ? spacing[`${size}`] : medium)};\n`;\n","import {\n    useRef,\n    useLayoutEffect,\n    DependencyList,\n    RefObject,\n    MutableRefObject,\n} from 'react';\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({\n    element,\n    useWindow,\n}: {\n    element?: RefObject<HTMLElement> | MutableRefObject<undefined> | null;\n    useWindow: boolean;\n}) {\n    if (!isBrowser) return { x: 0, y: 0 };\n\n    const target = element ? element.current : document.body;\n    const position = target\n        ? target.getBoundingClientRect()\n        : { top: 0, left: 0 };\n\n    return useWindow\n        ? { x: window.scrollX, y: window.scrollY }\n        : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(\n    effect: any,\n    deps: DependencyList,\n    element: RefObject<HTMLElement> | MutableRefObject<undefined> | null,\n    useWindow: boolean,\n    wait: number\n) {\n    const position = useRef(getScrollPosition({ useWindow, element }));\n\n    let throttleTimeout: number | null = null;\n\n    const callBack = () => {\n        const currPos = getScrollPosition({ element, useWindow });\n        effect({ prevPos: position.current, currPos });\n        position.current = currPos;\n        throttleTimeout = null;\n    };\n\n    useLayoutEffect(() => {\n        const handleScroll = () => {\n            if (wait) {\n                if (throttleTimeout === null) {\n                    // eslint-disable-next-line\n                    throttleTimeout = setTimeout(callBack, wait);\n                }\n            } else {\n                callBack();\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, deps);\n}\n","import styled from 'styled-components/macro';\nimport { ContentWrapper } from 'src/components/Layout';\n\nexport const ContentWrapperStyled = styled(ContentWrapper)`\n    transition: opacity ease 0.5s, transform ease 0.4s;\n    opacity: ${({ visible }: { visible: boolean }) => (visible ? 1 : 0)};\n    transform: ${({ visible }: { visible: boolean }) =>\n        visible ? `scaleY(1)` : `scaleY(0.85)`};\n`;\n","import React, { useState, useRef, FunctionComponent } from 'react';\nimport { useScrollPosition } from 'src/hooks/UseScrollPosition';\nimport { ContentWrapperStyled } from './styles';\n\nexport const AnimatedContentWrapper: FunctionComponent = ({ children }) => {\n    const [hideOnScroll, setHideOnScroll] = useState(true);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const isBrowser = typeof window !== `undefined`;\n\n    useScrollPosition(\n        ({\n            prevPos,\n            currPos,\n        }: {\n            prevPos: { x: number; y: number };\n            currPos: { x: number; y: number };\n        }) => {\n            const isShow = isBrowser ? currPos.y < window.innerHeight : false;\n            if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n        },\n        [hideOnScroll],\n        wrapperRef,\n        false,\n        300\n    );\n\n    return (\n        <ContentWrapperStyled ref={wrapperRef} visible={hideOnScroll}>\n            {children}\n        </ContentWrapperStyled>\n    );\n};\n\nexport default AnimatedContentWrapper;\n","import styled, { keyframes } from 'styled-components';\nimport { ContentWrapper } from 'src/components/Layout';\n\nconst keyFrameWheelWobble = keyframes`\n    0% {\n        transform rotate(0deg)\n    }\n    50% {\n        transform rotate(180deg)\n    }\n    100% {\n        transform rotate(360deg)\n    }\n`;\n\nconst keyFrameBodyRock = keyframes`\n    0% {\n        transform skew(0deg, 0deg)\n    }\n    25% {\n        transform skew(1deg, 0deg)\n    }\n    50% {\n        transform skew(0deg, 0deg)\n    }\n    100% {\n        transform skew(-1deg, 0deg)\n    }\n`;\n\nconst keyFrameArm = keyframes`\n    0% {\n        transform rotate(0deg)\n    }\n    50% {\n        transform rotate(30deg)\n    }\n    100% {\n        transform rotate(0deg)\n    }\n`;\n\nconst keyFrameHeadbop = keyframes`\n    0% {\n        transform: translate(0, 0)\n    }\n    50% {\n        transform: translate(0, -2px)\n    }\n    100% {\n        transform: translate(0, 0)\n    }\n`;\nconst keyFrameSignal = keyframes`\n    0% {\n        opacity: 1;\n        transform: scale(1);\n    }\n    90% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 0;\n        transform: scale(8);\n    }\n`;\n\nconst keyFrameEye = keyframes`\n    0% {\n        height: 20px;\n    }\n    10% {\n        height: 20px;\n    }\n    12% {\n        height: 0px;\n    }\n    15% {\n        height: 20px\n    }\n\n    80% {\n        transform scale(1);\n    }\n    82% {\n        transform scale(1.3);\n    }\n    87% {transform scale(1);\n    }\n    100% {\n        height: 20px;\n    }\n`;\n\nconst keyFrameJourney = keyframes`\n    0%{\n        /* transform: translate(0, 400px) */\n        transform: translate(0, 200%) scale(1) rotate(0deg)\n    }\n    7%{\n        /* transform: translate(0, 400px) */\n        transform: translate(0, 50%) scale(1.5) rotate(-30deg)\n    }\n    14%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(0, 50%) scale(1.5) rotate(-30deg)\n    }\n    18%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(0, 200%) \n    }\n    19%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(150%, 200%) scale(1)\n    }\n    20%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(1000px, 0) rotate(-20deg)\n    }\n\n    99%{\n        /* transform: translate(0, 0) */\n        transform: translate(-1000px, 0) \n    }\n\n    100%{\n        /* transform: translate(0, 0) */\n        transform: translate(-1000px, 200%) rotate(0deg)\n    }\n`;\n\nexport const ContentWrapperFloating = styled(ContentWrapper)`\n    position: absolute;\n    z-index: 2;\n    background: ${({\n        theme: {\n            colors: { blue },\n        },\n    }) => `linear-gradient(to bottom, ${blue} 85%, rgba(0,0,0,0)) 15%`};\n`;\n\nexport const RobotWrapper = styled.div`\n    position: relative;\n    height: 600px;\n    width: 100%;\n    overflow: hidden;\n    z-index: 0;\n`;\nexport const WholeRobot = styled.div`\n    position: absolute;\n    width: 200px;\n    height: 300px;\n    left: calc(50% - 200px / 2);\n    bottom: 0;\n    animation: ${keyFrameJourney} 10s linear 0s infinite;\n    z-index: 1;\n`;\n\nexport const Neck = styled.div`\n    position: absolute;\n    width: 20px;\n    height: 40px;\n    background-color: #555;\n    border-radius: 6%;\n    left: calc(50% - 10px);\n    top: 100px;\n`;\n\nexport const Arial = styled.div`\n    position: absolute;\n    width: 4px;\n    height: 30px;\n    background-color: #555;\n    border-radius: 6%;\n    left: calc(50% - 2px);\n    top: 20px;\n    animation: ${keyFrameHeadbop} 0.4s ease-in-out 0s infinite;\n`;\n\nexport const BallEnd = styled.div`\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #555;\n    background: radial-gradient(#555, #888);\n    border-radius: 50%;\n    left: calc(50% - 5px);\n    top: 0;\n    animation: ${keyFrameHeadbop} 0.4s ease-in-out 0s infinite;\n`;\n\nexport const Signal = styled.div`\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    background-color: #555;\n    background: radial-gradient(transparent, #888);\n    border-radius: 50%;\n    left: calc(50% - 15px);\n    top: 0;\n    animation: ${keyFrameSignal} 2s ease 0s infinite;\n`;\n\nexport const RoboBody = styled.div`\n    position: absolute;\n    width: 140px;\n    height: 150px;\n    background: radial-gradient(#555, #888);\n    border-radius: 6%;\n    left: calc(50% - 140px / 2);\n    bottom: 24px;\n    animation: ${keyFrameBodyRock} 1s ease-in-out 0s infinite;\n`;\n\nexport const Wheel1 = styled.div`\n    position: absolute;\n    width: 36px;\n    height: 40px;\n    background-color: #222;\n    border-radius: 50%;\n    left: 40px;\n    bottom: 0px;\n    animation: ${keyFrameWheelWobble} 0.8s linear 0s infinite;\n`;\n\nexport const Wheel2 = styled.div`\n    position: absolute;\n    width: 40px;\n    height: 36px;\n    background-color: #222;\n    border-radius: 50%;\n    right: 40px;\n    bottom: 0px;\n    animation: ${keyFrameWheelWobble} 0.8s linear 0s infinite;\n`;\n\nexport const WheelHub = styled.div`\n    position: absolute;\n    width: 20px;\n    height: 0;\n    border-left: 80px solid transparent;\n    border-right: 80px solid transparent;\n    border-bottom: 70px solid #666;\n    border-radius: 50px;\n    left: 10px;\n    bottom: 20px;\n    animation: ${keyFrameBodyRock} 1s ease-in-out 0s infinite;\n`;\n\nexport const Arm = styled.div`\n    position: relative;\n    text-align: center;\n    width: 40px;\n    height: 100px;\n    margin-left: 80px;\n    margin-top: 150px;\n    transform-origin: top;\n    animation: ${keyFrameArm} 0.8s linear 0s infinite;\n`;\nexport const ArmTop = styled.div`\n    position: absolute;\n    text-align: center;\n    left: 5px;\n    top: 0px;\n    height: 100px;\n    width: 30px;\n    background-color: #444;\n    border-radius: 10px;\n    box-shadow: 7px 10px 22px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const Hand = styled.div`\n    position: absolute;\n    right: 5px;\n    bottom: 0px;\n    height: 30px;\n    width: 60px;\n    border-radius: 50%;\n    background-color: #333;\n    border-radius: 10px;\n`;\n\nexport const Head = styled.div`\n    position: absolute;\n    height: 65px;\n    width: 100px;\n    top: 50px;\n    left: 50px;\n    border-radius: 50%;\n    background-color: #777;\n    background: radial-gradient(#888, #555);\n    border-radius: 10px;\n    animation: ${keyFrameHeadbop} 0.4s linear 0s infinite;\n`;\n\nexport const Face = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n`;\n\nexport const EyeLeft = styled.div`\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    top: 20px;\n    left: 20px;\n    border-radius: 50%;\n    background-color: #777;\n    background: radial-gradient(#333, #111);\n    border-radius: 10px;\n    animation: ${keyFrameEye} 4s linear 0s infinite;\n`;\n\nexport const EyeRight = styled(EyeLeft)`\n    left: auto;\n    right: 20px;\n`;\n","import React from 'react';\n\nimport { VerticalSpacer } from 'src/components/Layout';\nimport { H2, Paragraph } from 'src/components/Typography';\nimport {\n    RobotWrapper,\n    WholeRobot,\n    RoboBody,\n    Neck,\n    Wheel1,\n    Wheel2,\n    WheelHub,\n    Arm,\n    ArmTop,\n    Hand,\n    Signal,\n    Arial,\n    BallEnd,\n    Head,\n    Face,\n    EyeLeft,\n    EyeRight,\n    ContentWrapperFloating,\n} from './styles';\n\nexport const RobotAnimation = () => {\n    return (\n        <RobotWrapper>\n            <WholeRobot>\n                <Neck />\n                <RoboBody />\n                <Wheel1 />\n                <Wheel2 />\n                <WheelHub />\n                <Arm>\n                    <Hand />\n                    <ArmTop />\n                </Arm>\n                <Signal />\n                <Arial>\n                    <BallEnd />\n                </Arial>\n                <Head>\n                    <Face>\n                        <EyeLeft />\n                        <EyeRight />\n                    </Face>\n                </Head>\n            </WholeRobot>\n            <ContentWrapperFloating>\n                <VerticalSpacer size='extraLarge' />\n                <H2 color='white'>A Robot</H2>\n                <VerticalSpacer size='medium' />\n                <Paragraph color='white'>\n                    It turns out that finding a decent animation library that\n                    will play ball with TypeScript and React hooks is actually a\n                    big ask. Those that do interesting tweens seem to rely on\n                    DOM events. All the others don't seem to do anything that\n                    CSS3 animations can't do out of the box. So I made this\n                    animation in plain old CSS.\n                </Paragraph>\n                <VerticalSpacer size='small' />\n            </ContentWrapperFloating>\n        </RobotWrapper>\n    );\n};\n\nexport default RobotAnimation;\n","import React from 'react';\n\nimport { H1, H2, Paragraph } from 'src/components/Typography';\nimport { PageWrapper, PageContent } from 'src/components/Layout';\nimport AnimatedContentWrapper from 'src/components/AnimatedContentWrapper';\nimport {\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport { RobotAnimation } from 'src/components/RobotAnimation';\n\nexport const Home = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock>\n                    <ContentWrapper>\n                        <VerticalSpacer size='extraExtraLarge' />\n                        <H1> welcome</H1>\n                        <VerticalSpacer size='large' />\n                        <Paragraph>\n                            Welcome to my front-end showcase. I originally\n                            created this site to try out TypeScript as an\n                            alternative to JS + Flow. This was also an exercise\n                            to see if I could make a website using pure\n                            functional components and hooks without touching\n                            classes and their life cycle functions.{' '}\n                            <a\n                                target='_blank'\n                                href='https://github.com/Develliot/showcase'\n                            >\n                                Source code\n                            </a>\n                            .\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue' padding={false}>\n                    <RobotAnimation />\n                </ColorBlock>\n\n                <ColorBlock color='darkGrey'>\n                    <AnimatedContentWrapper>\n                        <H2 color='white'> under the hood</H2>\n\n                        <VerticalSpacer size='medium' />\n                        <Paragraph color='white'>\n                            React\n                            <br />\n                            React Router\n                            <br />\n                            Typescript\n                            <br />\n                            Styled components\n                            <br />\n                            Prettier\n                            <br />\n                            Jest + Enzyme snapshot regression testing\n                        </Paragraph>\n                    </AnimatedContentWrapper>\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n    font-size: ${({\n        theme: {\n            fontSizes: { medium },\n        },\n    }) => medium};\n    padding: ${({\n        theme: {\n            spacing: { tiny, medium },\n        },\n    }) => `${tiny} ${medium}`};\n    font-weight: 500;\n    text-transform: uppercase;\n    transition: color 0.3s ease, background-color 0.3s ease;\n    background-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { blue },\n        },\n    }) => (color ? colors[`${color}`] : blue)};\n    border-width: 0.12rem;\n    border-style: solid;\n    border-radius: 1.5rem;\n    border-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { blue },\n        },\n    }) => (color ? colors[`${color}`] : blue)};\n    color: ${({\n        color,\n        theme: {\n            colors: { white, darkGrey },\n        },\n    }) => {\n        switch (color) {\n            case 'white':\n                return darkGrey;\n            case 'yellow':\n                return darkGrey;\n            case 'blue':\n                return white;\n            case 'pink':\n                return white;\n            case 'darkGrey':\n                return white;\n            case undefined:\n                return white;\n            default:\n                return white;\n        }\n    }};\n\n    &:hover,\n    &:focus {\n        background-color: ${({\n            color,\n            theme: {\n                colors: { white },\n            },\n        }) => {\n            switch (color) {\n                case 'white':\n                    return `rgba(0, 0, 0, 0.4)`;\n                case 'yellow':\n                    return `rgba(0, 0, 0, 0.4)`;\n                case 'blue':\n                    return white;\n                case 'pink':\n                    return white;\n                case 'darkGrey':\n                    return white;\n                case undefined:\n                    return white;\n                default:\n                    return white;\n            }\n        }};\n        color: ${({\n            color,\n            theme: {\n                colors,\n                colors: { blue },\n            },\n        }) => (color ? colors[`${color}`] : blue)};\n    }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { ColorType } from 'src/theme';\n\nimport { ButtonStyled } from './styles';\n\ntype Props = {\n    color?: ColorType;\n    onClick?: () => void;\n};\n\nexport const Button: FunctionComponent<Props> = ({\n    color = 'blue',\n    onClick = () => null,\n    children,\n}) => {\n    return (\n        <ButtonStyled onClick={onClick} color={color}>\n            {children}\n        </ButtonStyled>\n    );\n};\n\nexport default Button;\n","import styled from 'styled-components/macro';\n\nexport const TextInputWrapper = styled.div`\n    padding-top: 2rem;\n    position: relative;\n    overflow: hidden;\n`;\n\nexport const LabelStyled = styled.label`\n    position: absolute;\n    font-size: ${({\n        theme: {\n            fontSizes: { medium },\n        },\n    }) => medium};\n    font-weight: 700;\n    bottom: 0.5rem;\n    left: 0;\n    transition: bottom 0.2s, font-size 0.2s;\n    opacity: 0.6;\n`;\n\nexport const InputStyled = styled.input`\n    width: 100%;\n    border: none;\n    border-bottom: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => `0.12rem solid ${lightGrey}`};\n    background: none;\n    position: relative;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    padding: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => `${tiny} 0`};\n    font-size: ${({\n        theme: {\n            fontSizes: { medium },\n        },\n    }) => medium};\n    outline: 0;\n    transition: border-color 0.3s ease;\n\n    &:focus {\n        border-color: ${({\n            theme: {\n                colors: { darkGrey },\n            },\n        }) => darkGrey};\n    }\n\n    &:focus + ${LabelStyled}, &:not(:placeholder-shown) + ${LabelStyled} {\n        z-index: 2;\n        bottom: calc(100% - 1.5rem);\n        font-size: ${({\n            theme: {\n                fontSizes: { tiny },\n            },\n        }) => tiny};\n    }\n`;\n","import React from 'react';\nimport { TextInputWrapper, InputStyled, LabelStyled } from './styles';\n\ntype Props = {\n    name: string;\n    labelText: string;\n    required?: boolean;\n};\n\nexport const TextInput = ({ name, labelText, required = false }: Props) => {\n    return (\n        <TextInputWrapper>\n            <InputStyled\n                placeholder=' '\n                type='text'\n                required={required}\n                name={name}\n            />\n            <LabelStyled>{labelText}</LabelStyled>\n        </TextInputWrapper>\n    );\n};\n\nexport default TextInput;\n","import styled, { keyframes } from 'styled-components/macro';\n\nconst keyFrameLoadingGrowShirnk = keyframes`\n    0% {\n        width: 0%;\n    }\n    50% {\n        width: 100%;\n    }\n    100% {\n        width: 0%;\n    }\n`;\n\nexport const UserCardWrapper = styled.div`\n    overflow: hidden;\n`;\n\nexport const CoverColor = styled.div`\n    background-color: ${({ color }) => color};\n    width: 100%;\n    height: 150px;\n    position: relative;\n`;\n\nexport const BottomHalf = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    padding: ${({\n        theme: {\n            globalPadding,\n            spacing: { large },\n        },\n    }) =>\n        `${large} calc(${globalPadding} / 2 ) ${large} calc(${globalPadding} / 2 )`};\n`;\n\nexport const ImageWrapper = styled.div`\n    height: 128px;\n    width: 128px;\n    border-radius: 6px;\n    overflow: hidden;\n    border: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => `solid 1px ${lightGrey}`};\n    position: absolute;\n    bottom: -40px;\n`;\n\nexport const ImageContainer = styled.img`\n    height: 128px;\n    width: 128px;\n`;\n\nexport const LoadingCoverColor = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n    width: 100%;\n    height: 150px;\n    position: relative;\n`;\n\nexport const LoadingImageWrapper = styled.div`\n    height: 128px;\n    width: 128px;\n    border-radius: 6px;\n    overflow: hidden;\n    border: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => `solid 1px ${white}`};\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n    position: absolute;\n    bottom: -40px;\n`;\n\nexport const LoadingH3 = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n    width: 80%;\n    height: ${({\n        theme: {\n            fontSizes: { extraExtraLarge },\n        },\n    }) => extraExtraLarge};\n    position: relative;\n`;\n\nexport const LoadingParagraph = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n    width: 70%;\n    height: ${({\n        theme: {\n            fontSizes: { medium },\n        },\n    }) => medium};\n    position: relative;\n    margin-bottom: 0.45rem;\n`;\n\nexport const AnimatedRows = styled.div`\n    div:nth-child(5) {\n        animation: ${keyFrameLoadingGrowShirnk} 4s ease 0.5s infinite;\n    }\n    div:nth-child(4) {\n        animation: ${keyFrameLoadingGrowShirnk} 4s ease 1s infinite;\n    }\n    div:nth-child(3) {\n        animation: ${keyFrameLoadingGrowShirnk} 4s ease 0.5s infinite;\n    }\n    div:nth-child(2) {\n        animation: ${keyFrameLoadingGrowShirnk} 4s ease 0.3s infinite;\n    }\n    div:nth-child(1) {\n        animation: ${keyFrameLoadingGrowShirnk} 4s ease 0s infinite;\n    }\n`;\n","import React from 'react';\n\nimport { H3, Span, Paragraph } from 'src/components/Typography';\nimport { VerticalSpacer, RowCenter } from 'src/components/Layout';\n\nimport { UserType } from 'src/containers/UsersContainer';\n\nimport {\n    UserCardWrapper,\n    CoverColor,\n    ImageWrapper,\n    ImageContainer,\n    BottomHalf,\n} from './styles';\n\ntype Props = {\n    user: UserType;\n    color: string;\n};\n\nexport const UserCard = ({\n    user: {\n        name: { first, last },\n        picture,\n        email,\n        location: { street, city, state, postcode },\n    },\n    color,\n}: Props) => {\n    return (\n        <UserCardWrapper>\n            <RowCenter>\n                <CoverColor color={color}>\n                    <RowCenter>\n                        <ImageWrapper>\n                            <ImageContainer src={picture.large} />\n                        </ImageWrapper>\n                    </RowCenter>\n                </CoverColor>\n            </RowCenter>\n            <BottomHalf>\n                <VerticalSpacer size='small' />\n                <H3>\n                    {first} {last}\n                </H3>\n                <VerticalSpacer size='small' />\n                <Paragraph ellipsis={true}>\n                    <Span bold={true}>Email: </Span> {email}\n                </Paragraph>\n                <Paragraph ellipsis={true}>\n                    <Span bold={true}>Street: </Span>{' '}\n                    <Span>\n                        {street.number} {street.name}\n                    </Span>\n                </Paragraph>\n                <Paragraph ellipsis={true}>\n                    <Span bold={true}>City: </Span> {city}\n                </Paragraph>\n                <Paragraph ellipsis={true}>\n                    <Span bold={true}>State: </Span> {state}\n                </Paragraph>\n                <Paragraph ellipsis={true}>\n                    <Span bold={true}>Postcode: </Span> {postcode}\n                </Paragraph>\n            </BottomHalf>\n        </UserCardWrapper>\n    );\n};\n","import React from 'react';\n\nimport { VerticalSpacer, RowCenter } from 'src/components/Layout';\n\nimport {\n    UserCardWrapper,\n    BottomHalf,\n    LoadingCoverColor,\n    LoadingImageWrapper,\n    LoadingH3,\n    LoadingParagraph,\n    AnimatedRows,\n} from './styles';\n\nexport const UserCardLoading = () => {\n    return (\n        <UserCardWrapper>\n            <RowCenter>\n                <LoadingCoverColor>\n                    <RowCenter>\n                        <LoadingImageWrapper />\n                    </RowCenter>\n                </LoadingCoverColor>\n            </RowCenter>\n            <BottomHalf>\n                <VerticalSpacer size='small' />\n                <AnimatedRows>\n                    <LoadingH3 />\n                </AnimatedRows>\n                <VerticalSpacer size='medium' />\n                <AnimatedRows>\n                    <LoadingParagraph />\n                    <LoadingParagraph />\n                    <LoadingParagraph />\n                    <LoadingParagraph />\n                    <LoadingParagraph />\n                </AnimatedRows>\n            </BottomHalf>\n        </UserCardWrapper>\n    );\n};\n","import styled from 'styled-components/macro';\n\nexport const CarouselWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    overflow-y: hidden;\n`;\n\nexport const CarouselFadeOutLeft = styled.div`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    transition: opacity 0.3s linear;\n    opacity: ${({ visible }: { visible: boolean }) => (visible ? 1 : 0)};\n    background: ${({\n        theme: {\n            colors: { blue },\n        },\n    }) =>\n        `linear-gradient(to right, ${blue} , rgba(0,0,0,0) 10%, rgba(0,0,0,0) 90%)`};\n`;\n\nexport const CarouselFadeOutRight = styled(CarouselFadeOutLeft)`\n    background: ${({\n        theme: {\n            colors: { blue },\n        },\n    }) =>\n        `linear-gradient(to left, ${blue} , rgba(0,0,0,0) 10%, rgba(0,0,0,0) 90%)`};\n`;\n\nexport const CarouselScrollArea = styled.div`\n    overflow-x: scroll;\n    -webkit-overflow-scrolling: touch;\n    scroll-snap-type: x mandatory;\n\n    white-space: nowrap;\n    /* to hides */\n    padding-bottom: 20px;\n    margin-bottom: -20px;\n    height: 100%;\n`;\n\nexport const CarouselCard = styled.div`\n    scroll-snap-align: center;\n    display: inline-block;\n    width: 80%;\n`;\n\nexport const CarouselCardInner = styled.div`\n    transition: transform 0.2s linear;\n    transform: ${({ isSelected }: { isSelected: boolean }) =>\n        isSelected ? 'scale(1)' : 'scale(0.85)'};\n`;\n\nexport const DotContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\nexport const Dot = styled.button`\n    border: none;\n    padding: 0;\n    margin: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    transition: opacity 0.3s ease, transform 0.3s ease;\n    opacity: ${({ selected }: { selected: boolean }) => (selected ? 1 : 0.6)};\n\n    &:hover {\n        transform: scale(1.5);\n    }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { DotContainer, Dot } from './styles';\n\ntype DotProps = {\n    count: number;\n    currentPosition: number;\n    scrollToPosition: (to: number) => void;\n};\nexport const Dots: FunctionComponent<DotProps> = ({\n    count,\n    currentPosition,\n    scrollToPosition,\n}) => {\n    return (\n        <DotContainer>\n            {[...Array(count)].map((item, index) => {\n                const isSelected = index === currentPosition;\n                const scrollTo = () => {\n                    scrollToPosition(index);\n                };\n                return (\n                    <Dot key={index} selected={isSelected} onClick={scrollTo} />\n                );\n            })}\n        </DotContainer>\n    );\n};\n\nexport default Dots;\n","import React, { FunctionComponent, useState, useRef } from 'react';\nimport _ from 'underscore';\n\nimport {\n    CarouselWrapper,\n    CarouselCardInner,\n    CarouselCard,\n    CarouselScrollArea,\n    CarouselFadeOutLeft,\n    CarouselFadeOutRight,\n} from './styles';\nimport { VerticalSpacer } from 'src/components/Layout';\nimport { Dots } from './Dots';\n\ntype Props = {\n    onPositionChanged?: (postion: number) => void;\n};\n\nexport const Carousel: FunctionComponent<Props> = ({\n    children,\n    onPositionChanged,\n}) => {\n    const [currentPosition, setCurrentPositon] = useState(0);\n    const scrollRef = useRef<HTMLDivElement>(null);\n\n    // remove null children\n    const childArray = React.Children.toArray(children).filter(Boolean);\n\n    const getScroll = () => {\n        return {\n            y: scrollRef.current ? scrollRef.current.scrollTop : undefined,\n            x: scrollRef.current ? scrollRef.current.scrollLeft : undefined,\n        };\n    };\n\n    const setPosition = (to: number) => {\n        setCurrentPositon(to);\n\n        if (onPositionChanged) {\n            onPositionChanged(to);\n        }\n    };\n\n    const scrollToPosition = (to: number) => {\n        if (!scrollRef || !scrollRef.current) {\n            return null;\n        }\n        const rect = scrollRef.current.getBoundingClientRect();\n        const width = rect.width;\n        const scrollPosition = Math.round(width * 0.8 * to);\n        scrollRef.current.scrollTo(scrollPosition, 0);\n        setPosition(to);\n    };\n\n    const handleScroll = () => {\n        if (!scrollRef || !scrollRef.current) {\n            return null;\n        }\n        const rect = scrollRef.current.getBoundingClientRect();\n        const width = rect.width;\n        const scrollPosition = getScroll().x;\n        if (scrollPosition) {\n            const currentPosition = Math.round(scrollPosition / (width * 0.8));\n            setPosition(currentPosition);\n        }\n    };\n\n    const handleScrollThrottled = _.throttle(handleScroll, 100);\n\n    const fadeRightVisible = currentPosition !== childArray.length - 1;\n    const fadeLeftVisible = currentPosition !== 0;\n\n    return (\n        <>\n            <CarouselWrapper>\n                <CarouselScrollArea\n                    ref={scrollRef}\n                    onScroll={handleScrollThrottled}\n                >\n                    {childArray.map((child, index) => {\n                        const isSelected = index === currentPosition;\n                        return (\n                            <CarouselCard key={index}>\n                                <CarouselCardInner isSelected={isSelected}>\n                                    {child}\n                                </CarouselCardInner>\n                            </CarouselCard>\n                        );\n                    })}\n                </CarouselScrollArea>\n                <CarouselFadeOutLeft visible={fadeLeftVisible} />\n                <CarouselFadeOutRight visible={fadeRightVisible} />\n            </CarouselWrapper>\n            <VerticalSpacer size='small' />\n            <Dots\n                count={childArray.length}\n                currentPosition={currentPosition}\n                scrollToPosition={scrollToPosition}\n            />\n        </>\n    );\n};\n\nexport default Carousel;\n","import styled from 'styled-components/macro';\n\nexport const ErrorWrapper = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    padding: ${({\n        theme: {\n            spacing: { medium },\n        },\n    }) => medium};\n    border-radius: 1rem;\n`;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport urls from 'src/urls';\n\nimport { Button } from 'src/components/Button';\nimport { H2, Paragraph } from 'src/components/Typography';\nimport { VerticalSpacer } from 'src/components/Layout';\n\nimport { ErrorWrapper } from './styles';\n\ntype Props = {\n    errorMessage: string;\n    retry?: () => void;\n};\n\nexport const ErrorMessage: FunctionComponent<Props> = ({\n    errorMessage,\n    retry,\n}) => {\n    return (\n        <ErrorWrapper>\n            <H2>Something broke!</H2>\n            <VerticalSpacer size='large' />\n            <Paragraph>{errorMessage}</Paragraph>\n            <VerticalSpacer size='large' />\n            {retry ? (\n                <>\n                    <Button onClick={retry}>Retry</Button>\n                    <VerticalSpacer size='medium' />\n                </>\n            ) : null}\n            <Link to={urls.home}>\n                <Button color='darkGrey'>Home</Button>\n            </Link>\n        </ErrorWrapper>\n    );\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components/macro';\n\nexport const TilesWrapper = styled.div`\n    width: 100%;\n`;\n\nexport const FlexWrapRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    margin: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => `-${small}`};\n`;\n\nexport const ColorTileWrapper = styled.div`\n    padding: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => small};\n`;\n\nexport const ColorTile = styled.div`\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px;\n    padding: ${({\n        theme: {\n            spacing: { small, extraLarge },\n        },\n    }) => `${extraLarge} ${small} ${small} ${small}`};\n    background-color: ${({ color }) => color};\n    width: 170px;\n`;\n\nexport const ColorLabelWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    padding: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n`;\n","import React from 'react';\n\nimport { colors } from 'src/theme';\nimport { camelCaseToCaptilalisedCase } from 'src/utils/StringUtils';\nimport {\n    PageWrapper,\n    PageContent,\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport { H1, H2, H3, Span, Paragraph } from 'src/components/Typography';\nimport { Button } from 'src/components/Button';\nimport { TextInput } from 'src/components/TextInput';\nimport { UserCard } from 'src/components/UserCard';\nimport { UserCardLoading } from 'src/components/UserCard/UserCardLoading';\nimport { Carousel } from 'src/components/Carousel';\nimport { ErrorMessage } from 'src/components/ErrorMessage';\n\nimport {\n    TilesWrapper,\n    ColorTile,\n    ColorLabelWrapper,\n    ColorTileWrapper,\n    FlexWrapRow,\n} from './styles';\n\nconst colorLabelList = Object.keys(colors);\n\nconst mockUser = {\n    email: 'angela.castro@example.com',\n    location: {\n        street: {\n            number: '8267',\n            name: 'Grove Road',\n        },\n        city: 'Stevenage',\n        state: 'Durham',\n        postcode: 'BD18 8JD',\n        coordinates: {\n            latitude: 61.2773,\n            longitude: 45.9598,\n        },\n    },\n    login: {\n        uuid: '1255d3c5-a9c8-414e-8eb5-127478a19f62',\n    },\n    name: { first: 'Angela', last: 'Castro' },\n    picture: {\n        large: 'https://randomuser.me/api/portraits/women/45.jpg',\n    },\n};\n\nexport const DesignSystem = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock>\n                    <VerticalSpacer size='extraExtraLarge' />\n                    <ContentWrapper>\n                        <H1>Design System</H1>\n                        <VerticalSpacer size='large' />\n                        <H2>Colours</H2>\n                        <VerticalSpacer size='large' />\n                        <TilesWrapper>\n                            <FlexWrapRow>\n                                {colorLabelList.map(color => (\n                                    <ColorTileWrapper key={color}>\n                                        <ColorTile color={colors[`${color}`]}>\n                                            <ColorLabelWrapper>\n                                                <Span>\n                                                    {camelCaseToCaptilalisedCase(\n                                                        color\n                                                    )}\n                                                    :\n                                                </Span>\n                                                <Span>\n                                                    {colors[`${color}`]}\n                                                </Span>\n                                            </ColorLabelWrapper>\n                                        </ColorTile>\n                                    </ColorTileWrapper>\n                                ))}\n                            </FlexWrapRow>\n                        </TilesWrapper>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='yellow'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H2 color='darkGrey'>Colour Sections</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='darkGrey'>Yellow</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='darkGrey'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='white'>Blue</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='white'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='darkGrey'>White</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='darkGrey'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='pink'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='white'>Pink</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='darkGrey'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='white'>Dark Grey</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H2 color='white'>Typography</H2>\n                        <VerticalSpacer size='large' />\n                        <H1 color='white'>H1 Example text</H1>\n                        <VerticalSpacer size='large' />\n                        <H2 color='white'>H2 Example text</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>H3 Example text</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Paragraph example text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='white' padding={false}>\n                    <VerticalSpacer size='extraLarge' />\n                    <ContentWrapper>\n                        <VerticalSpacer size='medium' />\n                        <H2 color='darkGrey'>Controls</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='darkGrey'>Buttons</H3>\n                        <VerticalSpacer size='large' />\n                        <Button>Blue button (default)</Button>\n                        <VerticalSpacer size='small' />\n                        <Button color='pink'>Pink Button</Button>\n                        <VerticalSpacer size='small' />\n                        <Button color='darkGrey'>Dark Grey Button</Button>\n                        <VerticalSpacer size='tiny' />\n                    </ContentWrapper>\n                </ColorBlock>\n                <ColorBlock color='pink' padding={false}>\n                    <VerticalSpacer size='tiny' />\n                    <ContentWrapper>\n                        <Button color='yellow'>Yellow Button</Button>\n                        <VerticalSpacer size='small' />\n                        <Button color='white'>white Button</Button>\n                        <VerticalSpacer size='tiny' />\n                    </ContentWrapper>\n                </ColorBlock>\n                <ColorBlock color='white' padding={false}>\n                    <VerticalSpacer size='tiny' />\n                    <ContentWrapper>\n                        <VerticalSpacer size='large' />\n                        <H3 color='darkGrey'>Form inputs</H3>\n                        <VerticalSpacer size='medium' />\n                        <TextInput\n                            name='textfield'\n                            labelText='Enter some text here:'\n                        />\n                    </ContentWrapper>\n                    <VerticalSpacer size='extraExtraLarge' />\n                </ColorBlock>\n\n                <ColorBlock color='blue' padding={false}>\n                    <VerticalSpacer size='extraLarge' />\n                    <ContentWrapper>\n                        <VerticalSpacer size='medium' />\n                        <H2 color='white'>Components</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>User card</H3>\n                        <VerticalSpacer size='medium' />\n                        <UserCard color={colors.pink} user={mockUser} />\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>User card loading</H3>\n                        <VerticalSpacer size='medium' />\n                        <UserCardLoading />\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>\n                            Carousel (scrollable mobile friendly)\n                        </H3>\n                        <VerticalSpacer size='medium' />\n                        <Carousel>\n                            <UserCard color={colors.yellow} user={mockUser} />\n                            <UserCard color={colors.darkGrey} user={mockUser} />\n                            <UserCard color={colors.pink} user={mockUser} />\n                            <UserCard color={colors.darkGrey} user={mockUser} />\n                        </Carousel>\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>Error message</H3>\n                        <VerticalSpacer size='medium' />\n                        <ErrorMessage\n                            errorMessage='This is an error message'\n                            retry={() => {}}\n                        />\n                        <VerticalSpacer size='large' />\n                    </ContentWrapper>\n                    <VerticalSpacer size='extraExtraLarge' />\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default DesignSystem;\n","export const camelCaseToCaptilalisedCase = (text: string): string => {\n    const result = text.replace(/([A-Z])/g, ' $1').trim();\n    return result.charAt(0).toUpperCase() + result.slice(1);\n};\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const useGetRequest = (initialUrl: string, initialData: any) => {\n    const [url, setUrl] = useState(initialUrl);\n    const [data, setData] = useState(initialData);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsError(false);\n            setIsLoading(true);\n            try {\n                const result = await axios(url);\n                setData(result.data);\n            } catch (error) {\n                setIsError(true);\n            }\n            setIsLoading(false);\n        };\n        fetchData();\n    }, [url]);\n\n    return [data, isLoading, isError, setUrl];\n};\n\nexport default useGetRequest;\n","export const scaleBetween = (\n    unscaledNum: number,\n    minAllowed: number,\n    maxAllowed: number,\n    min: number,\n    max: number\n) => {\n    const value =\n        ((maxAllowed - minAllowed) * (unscaledNum - min)) / (max - min) +\n        minAllowed;\n    const valueRounded = Math.round(value * 1000000) / 1000000;\n    return valueRounded;\n};\n\nexport const scaleLatitudeGlobalToUK = (lat: number): number => {\n    return scaleBetween(lat, 51, 54, -90, 90);\n};\n\nexport const scaleLongitudeGlobalToUK = (lng: number): number => {\n    return scaleBetween(lng, -8, 2, -180, 180);\n};\n","import React, { FunctionComponent, useContext } from 'react';\n\nimport { colors as themeColors } from 'src/theme';\nimport { UserContext } from 'src/contexts/UserContext';\n\nimport { UserCard } from 'src/components/UserCard';\nimport { UserCardLoading } from 'src/components/UserCard/UserCardLoading';\nimport { Carousel } from 'src/components/Carousel';\nimport { ErrorMessage } from 'src/components/ErrorMessage';\n\n// types\nimport { UserType } from 'src/containers/UsersContainer';\n\nconst chooseColor = (index: number): string => {\n    const availableColours = [\n        themeColors.pink,\n        themeColors.yellow,\n        themeColors.darkGrey,\n    ];\n    return availableColours[index % availableColours.length];\n};\n\ntype Props = {\n    isError: boolean;\n    isLoading: boolean;\n    users: UserType[];\n    retry: () => void;\n};\n\nexport const Users: FunctionComponent<Props> = ({\n    isError,\n    isLoading,\n    users,\n    retry,\n}) => {\n    const [state, dispatch] = useContext(UserContext);\n\n    const setCurrentPosition = (position: number): void => {\n        if (position !== state.selectedPosition) {\n            dispatch({ ...state, selectedPosition: position });\n        }\n    };\n\n    return (\n        <>\n            {isError ? (\n                <ErrorMessage\n                    errorMessage='Unable to retrieve user data'\n                    retry={retry}\n                />\n            ) : isLoading ? (\n                <Carousel>\n                    <UserCardLoading />\n                    <UserCardLoading />\n                    <UserCardLoading />\n                </Carousel>\n            ) : (\n                <Carousel onPositionChanged={setCurrentPosition}>\n                    {users.map((user: UserType, index: number) => (\n                        <UserCard\n                            key={user.login.uuid}\n                            user={user}\n                            color={chooseColor(index)}\n                        />\n                    ))}\n                </Carousel>\n            )}\n        </>\n    );\n};\n\nexport default Users;\n","import React, { useEffect, useContext, FunctionComponent } from 'react';\nimport { useGetRequest } from 'src/hooks/useGetRequest';\nimport { UserContext } from 'src/contexts/UserContext';\n\nimport {\n    scaleLatitudeGlobalToUK,\n    scaleLongitudeGlobalToUK,\n} from 'src/utils/NumberUtils';\n\nimport { Users } from 'src/components/Users';\n\nexport type UserType = {\n    name: { first: string; last: string };\n    login: { uuid: string };\n    picture: { large: string };\n    email: string;\n    location: {\n        street: { number: string; name: string };\n        city: string;\n        state: string;\n        postcode: string;\n        coordinates: {\n            latitude: number;\n            longitude: number;\n        };\n    };\n};\n\n// TODO Feels like this is middleware that should live in the hook\n// This pattern of using containers + hooks + context is a bit weird\nexport const UsersContainer: FunctionComponent = () => {\n    const url =\n        'https://randomuser.me/api/?nat=gb&results=5&inc=name,email,login,location,picture&noinfo';\n    const [data, isLoading, isError, setUrl] = useGetRequest(url, {\n        results: [],\n    });\n    const [state, dispatch] = useContext(UserContext);\n\n    // the coordinates are random and sometimes not visible on the map with extreme latitudes,\n    // lets keep the randomness but restrict the scale to only the UK\n    const transformCoords = (users: UserType[]): UserType[] => {\n        return users.map(user => {\n            return {\n                ...user,\n                location: {\n                    ...user.location,\n                    coordinates: {\n                        latitude: scaleLatitudeGlobalToUK(\n                            user.location.coordinates.latitude\n                        ),\n                        longitude: scaleLongitudeGlobalToUK(\n                            user.location.coordinates.longitude\n                        ),\n                    },\n                },\n            };\n        });\n    };\n\n    useEffect(() => {\n        // only get mock user data if there is no exiting user data\n        if (state.users.length === 0) {\n            setUrl(url);\n            const users = transformCoords(data.results);\n            dispatch({ ...state, users });\n        }\n    }, [setUrl, data]);\n\n    const retry = (): void => {\n        setUrl(url);\n    };\n\n    return (\n        <Users\n            isError={isError}\n            isLoading={isLoading}\n            retry={retry}\n            users={state.users}\n        />\n    );\n};\n\nexport default UsersContainer;\n","import styled from 'styled-components/macro';\n\nexport const MapWrapper = styled.div`\n    width: 100%;\n    height: 300px;\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n`;\n\nexport const MarkerWrapper = styled.div`\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    overflow: hidden;\n    border: ${({\n        theme: {\n            colors: { darkGrey },\n        },\n    }) => `solid 1px ${darkGrey}`};\n`;\n\nexport const MarkerImage = styled.img`\n    height: 100%;\n    width: 100%;\n`;\n","import React, { useContext } from 'react';\nimport GoogleMapReact, { Coords } from 'google-map-react';\n\nimport { UserContext } from 'src/contexts/UserContext';\n\nimport { MapWrapper, MarkerImage, MarkerWrapper } from './styles';\n\ntype MarkerProps = {\n    lng: number;\n    lat: number;\n    imageSrc: string;\n};\nconst Marker = (props: MarkerProps) => {\n    return (\n        <MarkerWrapper>\n            <MarkerImage src={props.imageSrc} />\n        </MarkerWrapper>\n    );\n};\n\nexport const Map = () => {\n    const [state] = useContext(UserContext);\n\n    const selectedUser = state.users[state.selectedPosition];\n\n    if (!selectedUser) {\n        return null;\n    }\n    const newCenter: Coords = {\n        lat: selectedUser.location.coordinates.latitude,\n        lng: selectedUser.location.coordinates.longitude,\n    };\n\n    return (\n        <MapWrapper id='map'>\n            <GoogleMapReact\n                bootstrapURLKeys={{\n                    key: 'AIzaSyCiVjDX7HFiFgzFxLrSz5LZAnBMzXl0CkU',\n                }}\n                center={newCenter}\n                defaultZoom={7}\n            >\n                {state.users.map(user => (\n                    <Marker\n                        lat={user.location.coordinates.latitude}\n                        lng={user.location.coordinates.longitude}\n                        imageSrc={user.picture.large}\n                    />\n                ))}\n            </GoogleMapReact>\n        </MapWrapper>\n    );\n};\n\nexport default Map;\n","import React from 'react';\n\nimport { H1, H2, H3, Paragraph } from 'src/components/Typography';\nimport { PageWrapper, PageContent } from 'src/components/Layout';\nimport {\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport UsersContainer from 'src/containers/UsersContainer';\nimport Map from 'src/components/Map';\n\nexport const UsingAPIs = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock color='blue'>\n                    <ContentWrapper>\n                        <VerticalSpacer size='extraExtraLarge' />\n                        <H1 color='white'>Using APIs</H1>\n                        <VerticalSpacer size='large' />\n                        <H2 color='white'>Random User Data</H2>\n                        <VerticalSpacer size='medium' />\n                        <UsersContainer />\n                        <VerticalSpacer size='large' />\n                        <Map />\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='yellow'>\n                    <ContentWrapper>\n                        <VerticalSpacer size='extraExtraLarge' />\n                        <H3>Data strategy</H3>\n                        <VerticalSpacer size='medium' />\n                        <Paragraph>\n                            My aim was to use the context API as a data store,\n                            and create a reusable hook for making the HTTP\n                            requests. This was so components could observe the\n                            store and wouldn't be strongly coupled any parent\n                            components passing props the whole way down the\n                            component hierarchy.\n                        </Paragraph>\n                        <Paragraph>\n                            The user data comes from the https://randomuser.me/\n                            random user generator API. The coordinates are a bit\n                            random so I have had to transform them from a global\n                            range to a UK range so point marks don't end up in\n                            weird places. The maps are from google maps\n                            Javascript API.\n                        </Paragraph>\n                        <VerticalSpacer size='large' />\n                        <H3>Separating the data and display</H3>\n                        <VerticalSpacer size='medium' />\n                        <Paragraph>\n                            The request itself is triggered by the\n                            UsersContainer. The containers job is to perform the\n                            request via the hook and pump data into a\n                            userContext or pass error and loading states\n                            directly to the visible component.\n                        </Paragraph>\n                        <VerticalSpacer size='large' />\n                        <H3>Context API</H3>\n                        <VerticalSpacer size='medium' />\n                        <Paragraph>\n                            I don't think something like Redux was required for\n                            state management. Data from the URL request and the\n                            carousel's currently selected User are stored in the\n                            usersContext. The Map component knows which User\n                            Marker to scroll to when the index of the carousel\n                            changes by using the state from this context.\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default UsingAPIs;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport urls from 'src/urls';\n\nimport Home from 'src/pages/Home';\nimport DesignSystem from 'src/pages/DesignSystem';\nimport UsingAPIs from 'src/pages/UsingAPIs';\n\nexport const Routes: React.FC = () => {\n    return (\n        <Switch>\n            <Route path={urls.designSystem} component={DesignSystem}></Route>\n            <Route path={urls.usingAPIs} component={UsingAPIs}></Route>\n            <Route exact={true} path={urls.home} component={Home}></Route>\n            <Redirect from='/' to={urls.home} />\n            {/* TODO 404 */}\n            {/* <Route path=\"*\">\n                    <NoMatch />\n                </Route> */}\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import styled from 'styled-components/macro';\n\nexport const HeaderWrapper = styled.header`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 100vw;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n    transition: margin ease 0.2s, opacity ease 0.3s;\n    margin-top: ${({ visible }: { visible: boolean }) =>\n        visible ? `0` : `-100px`};\n    opacity: ${({ visible }: { visible: boolean }) => (visible ? `1` : `0`)};\n    z-index: 10;\n`;\n\nexport const HeaderInner = styled.div`\n    margin: 0 auto;\n    background-color: ${({\n        theme: {\n            colors: { darkGrey },\n        },\n    }) => darkGrey};\n    padding: ${({\n        theme: {\n            spacing: { small },\n            globalPadding,\n        },\n    }) => `${small} ${globalPadding}`};\n`;\n\nexport const Links = styled.ul`\n    padding: 0;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    justify-content: flex-start;\n`;\n","import styled from 'styled-components/macro';\nimport { NavLink } from 'react-router-dom';\nimport { Paragraph } from 'src/components/Typography';\n\nexport const HeaderLinkItem = styled.li`\n    padding: 0;\n    margin: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => `0 ${small} 0 0`};\n`;\n\nexport const HoverInidcator = styled.div`\n    height: 3px;\n    background-color: ${({\n        theme: {\n            colors: { yellow },\n        },\n    }) => yellow};\n    margin-top: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n    width: 100%;\n    max-width: 0;\n    transition: max-width ease 0.3s;\n`;\n\nexport const RowCenter = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n    text-decoration: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    ${Paragraph} {\n        transition: color ease 0.3s;\n        font-weight: 600;\n    }\n\n    &.selected {\n        ${HoverInidcator} {\n            max-width: 150px;\n        }\n    }\n\n    &:hover,\n    &:focus {\n        outline: none;\n\n        ${Paragraph} {\n            color: ${({\n                theme: {\n                    colors: { yellow },\n                },\n            }) => yellow};\n        }\n    }\n`;\n","import React from 'react';\nimport { Paragraph } from 'src/components/Typography';\nimport { RowCenter } from 'src/components/Layout';\nimport { NavLinkStyled, HoverInidcator, HeaderLinkItem } from './styles';\n\nexport const HeaderNavLink = ({\n    to,\n    title,\n    exact = false,\n}: {\n    to: string;\n    title: string;\n    exact?: boolean;\n}) => {\n    return (\n        <HeaderLinkItem>\n            <NavLinkStyled exact={exact} to={to} activeClassName='selected'>\n                <Paragraph color='white'>{title}</Paragraph>\n                <RowCenter>\n                    <HoverInidcator />\n                </RowCenter>\n            </NavLinkStyled>\n        </HeaderLinkItem>\n    );\n};\n","import React, { useState, useMemo } from 'react';\n\nimport { useScrollPosition } from 'src/hooks/UseScrollPosition';\nimport urls from 'src/urls';\n\nimport { H2 } from 'src/components/Typography';\nimport { VerticalSpacer } from 'src/components/Layout';\nimport { HeaderWrapper, HeaderInner, Links } from './styles';\n\nimport { HeaderNavLink } from 'src/components/HeaderNavLink';\n\nexport const Header = ({ visible }: { visible: boolean }) => {\n    return (\n        <HeaderWrapper visible={visible}>\n            <HeaderInner>\n                <H2 color='white'>Showcase</H2>\n                <VerticalSpacer size='medium' />\n                <nav>\n                    <Links>\n                        <HeaderNavLink\n                            to={urls.home}\n                            title='Home'\n                            exact={true}\n                        />\n                        <HeaderNavLink\n                            to={urls.designSystem}\n                            title='Design System'\n                        />\n                        <HeaderNavLink to={urls.usingAPIs} title='Using APIs' />\n                    </Links>\n                </nav>\n            </HeaderInner>\n        </HeaderWrapper>\n    );\n};\n\nexport const HideOnScroll = () => {\n    const [hideOnScroll, setHideOnScroll] = useState(true);\n\n    useScrollPosition(\n        ({\n            prevPos,\n            currPos,\n        }: {\n            prevPos: { x: number; y: number };\n            currPos: { x: number; y: number };\n        }) => {\n            const isShow = currPos.y >= prevPos.y;\n            if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n        },\n        [hideOnScroll],\n        null,\n        false,\n        300\n    );\n\n    return useMemo(() => <Header visible={hideOnScroll} />, [hideOnScroll]);\n};\n\nexport default HideOnScroll;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { UserProvider } from 'src/contexts/UserContext';\n\nimport theme from 'src/theme';\nimport Routes from 'src/Routes';\nimport Header from 'src/components/Header';\n\n// This is going to be where all the project level HOCs live\nconst App: React.FC = () => {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <UserProvider>\n                    <Router>\n                        <Header />\n                        <Routes />\n                        {/* TODO FOOTER */}\n                    </Router>\n                </UserProvider>\n            </ThemeProvider>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}