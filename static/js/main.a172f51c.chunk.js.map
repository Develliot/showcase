{"version":3,"sources":["serviceWorker.ts","urls.ts","theme.ts","components/Typography/index.ts","pages/styles/index.ts","components/Layout/index.tsx","hooks/UseScrollPosition.ts","components/AnitmatedContentWrapper/index.tsx","components/RobotAnimation/index.tsx","pages/Home/index.tsx","pages/DesignSystem/index.tsx","Routes.tsx","components/Header/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","fontSizes","extraTiny","tiny","small","medium","large","extraLarge","extraExtraLarge","extraExtraExtraLarge","colors","white","lightGrey","darkGrey","blue","pink","yellow","theme","breakpoints","globalPadding","spacing","baseText","props","color","textAlign","fontSize","Span","styled","span","Paragraph","p","H1","h1","H2","h2","H3","h3","PageWrapper","div","PageContent","Block","ColorBlock","padding","children","VerticalSpacer","size","ContentWrapper","isBrowser","getScrollPosition","element","useWindow","x","y","target","current","document","body","position","getBoundingClientRect","top","left","scrollX","scrollY","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","ContentWrapperStyled","visible","AnimatedContentWrapper","useState","hideOnScroll","setHideOnScroll","wrapperRef","isShow","innerHeight","ref","keyFrameWheelWobble","keyframes","keyFrameBodyRock","keyFrameArm","keyFrameHeadbop","keyFrameSignal","keyFrameEye","keyFrameJourney","ContentWrapperFloating","RobotWrapper","WholeRobot","Neck","Arial","BallEnd","Signal","RoboBody","Wheel1","Wheel2","WheelHub","Arm","ArmTop","Hand","Head","Face","EyeLeft","EyeRight","RobotAnimation","Home","AnitmatedContentWrapper","colorLabelList","Object","keys","TilesWrapper","FlexWrapRow","ColorTileWrapper","ColorTile","ColorLabelWrapper","DesignSystem","map","key","text","result","replace","charAt","toUpperCase","slice","camelCaseToSentenceCase","Routes","path","urls","component","exact","HeaderWrapper","header","HeaderInner","Links","ul","HoverInidcator","RowCenter","NavLinkStyled","NavLink","withRouter","useMemo","to","activeClassName","App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a172f51c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n    home: '/',\n    designSystem: '/designSystem',\n};\n","import { DefaultTheme } from 'styled-components';\n\nexport const fontSizes: { [key: string]: string } = {\n    extraTiny: '0.6.25rem',\n    tiny: '0.75rem',\n    small: '0.875rem',\n    medium: '1rem',\n    large: '1.125rem',\n    extraLarge: '1.25rem',\n    extraExtraLarge: '1.5rem',\n    extraExtraExtraLarge: '3rem',\n};\n\nexport const breakpoints = {\n    large: '1400px',\n};\n\nexport const globalPadding = '10vw';\n\nexport type SpacingType =\n    | 'tiny'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'extraLarge'\n    | 'extraExtraLarge';\n\nexport const spacing: { [key in SpacingType]: string } = {\n    tiny: '0.5rem',\n    small: '1rem',\n    medium: '1.5rem',\n    large: '3rem',\n    extraLarge: '4rem',\n    extraExtraLarge: '8rem',\n};\n\nexport type ColorType =\n    | 'white'\n    | 'darkGrey'\n    | 'lightGrey'\n    | 'blue'\n    | 'pink'\n    | 'yellow';\n\nexport const colors: { [key: string]: string } = {\n    white: '#F3F7F0',\n    lightGrey: '#d4d4d4',\n    darkGrey: '#343434',\n    blue: '#1B4965',\n    pink: '#A93F55',\n    yellow: '#FFC857',\n};\n\nconst theme: DefaultTheme = {\n    fontSizes,\n    breakpoints,\n    globalPadding,\n    spacing,\n    colors,\n};\n\nexport default theme;\n","import styled from 'styled-components/macro';\nimport { colors, fontSizes } from 'src/theme';\n\ntype baseTextProps = {\n    color?: string;\n    textAlign?: 'left' | 'right' | 'center';\n    fontSize?:\n        | 'extraTiny'\n        | 'tiny'\n        | 'small'\n        | 'medium'\n        | 'large'\n        | 'extraLarge'\n        | 'extraExtraLarge'\n        | 'extraExtraExtraLarge';\n};\n\nconst baseText = (props: baseTextProps) => `\n    font-family: 'Quicksand', sans-serif;\n    color: ${props.color ? colors[`${props.color}`] : colors.darkGrey};\n    textAlign = ${props.textAlign ? props.textAlign : 'left'};\n    font-size: ${\n        props.fontSize ? fontSizes[`${props.fontSize}`] : fontSizes.medium\n    };\n    line-height: 1.5em;\n`;\n\nexport const Span = styled.span`\n    ${props => baseText(props)}\n`;\n\nexport const Paragraph = styled.p`\n    ${props => baseText(props)}\n    max-width: 600px;\n`;\n\nexport const H1 = styled.h1`\n    ${props => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraExtraExtraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraExtraExtraLarge)};\n`;\n\nexport const H2 = styled.h2`\n    ${props => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraExtraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraExtraLarge)};\n`;\n\nexport const H3 = styled.h3`\n    ${props => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraLarge)};\n`;\n","import styled from 'styled-components/macro';\n\nexport const PageWrapper = styled.div`\n    min-height: 100vh;\n    width: 100%;\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n`;\n\nexport const PageContent = styled.div`\n    width: 100%;\n    height: 100%;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n    margin: 0 auto;\n`;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components/macro';\nimport { SpacingType, ColorType } from 'src/theme';\n\nconst Block = styled.div`\n    background-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { white },\n        },\n    }: {\n        theme: any;\n        color: ColorType;\n    }) => (color ? colors[`${color}`] : white)};\n`;\n\ntype Props = {\n    color?: ColorType;\n    padding?: boolean;\n};\n\nexport const ColorBlock: FunctionComponent<Props> = ({\n    color,\n    padding = true,\n    children,\n}) => {\n    return (\n        <Block color={color || 'white'}>\n            {padding && <VerticalSpacer size='extraLarge' />}\n            {children}\n            {padding && <VerticalSpacer size='extraExtraLarge' />}\n        </Block>\n    );\n};\n\nexport const ContentWrapper = styled.div`\n    padding: ${({ theme: { globalPadding } }) => `0 ${globalPadding}`};\n`;\n\nexport const VerticalSpacer = styled.div`\n    height: ${({\n        size,\n        theme: {\n            spacing,\n            spacing: { medium },\n        },\n    }: {\n        size: SpacingType;\n        theme: any;\n    }) => (size ? spacing[`${size}`] : medium)};\n`;\n","import {\n    useRef,\n    useLayoutEffect,\n    DependencyList,\n    RefObject,\n    MutableRefObject,\n} from 'react';\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({\n    element,\n    useWindow,\n}: {\n    element?: RefObject<HTMLElement> | MutableRefObject<undefined> | null;\n    useWindow: boolean;\n}) {\n    if (!isBrowser) return { x: 0, y: 0 };\n\n    const target = element ? element.current : document.body;\n    const position = target\n        ? target.getBoundingClientRect()\n        : { top: 0, left: 0 };\n\n    return useWindow\n        ? { x: window.scrollX, y: window.scrollY }\n        : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(\n    effect: any,\n    deps: DependencyList,\n    element: RefObject<HTMLElement> | MutableRefObject<undefined> | null,\n    useWindow: boolean,\n    wait: number\n) {\n    const position = useRef(getScrollPosition({ useWindow, element }));\n\n    let throttleTimeout: number | null = null;\n\n    const callBack = () => {\n        const currPos = getScrollPosition({ element, useWindow });\n        effect({ prevPos: position.current, currPos });\n        position.current = currPos;\n        throttleTimeout = null;\n    };\n\n    useLayoutEffect(() => {\n        const handleScroll = () => {\n            if (wait) {\n                if (throttleTimeout === null) {\n                    // eslint-disable-next-line\n                    throttleTimeout = setTimeout(callBack, wait);\n                }\n            } else {\n                callBack();\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, deps);\n}\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components/macro';\n\nimport { ContentWrapper } from 'src/components/Layout';\nimport { useScrollPosition } from 'src/hooks/UseScrollPosition';\n\nconst ContentWrapperStyled = styled(ContentWrapper)`\n    transition: opacity ease 0.5s, transform ease 0.4s;\n    opacity: ${({ visible }: { visible: boolean }) => (visible ? 1 : 0)};\n    transform: ${({ visible }: { visible: boolean }) =>\n        visible ? `scaleY(1)` : `scaleY(0.85)`};\n`;\n\nconst AnimatedContentWrapper = ({ children }: { children: any }) => {\n    const [hideOnScroll, setHideOnScroll] = useState(true);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const isBrowser = typeof window !== `undefined`;\n\n    useScrollPosition(\n        ({\n            prevPos,\n            currPos,\n        }: {\n            prevPos: { x: number; y: number };\n            currPos: { x: number; y: number };\n        }) => {\n            const isShow = isBrowser ? currPos.y < window.innerHeight : false;\n            if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n        },\n        [hideOnScroll],\n        wrapperRef,\n        false,\n        300\n    );\n\n    return (\n        <ContentWrapperStyled ref={wrapperRef} visible={hideOnScroll}>\n            {children}\n        </ContentWrapperStyled>\n    );\n};\n\nexport default AnimatedContentWrapper;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { ContentWrapper, VerticalSpacer } from 'src/components/Layout';\n\nimport { H2, Paragraph } from 'src/components/Typography';\n\nconst keyFrameWheelWobble = keyframes`\n    0% {\n        transform rotate(0deg)\n    }\n    50% {\n        transform rotate(180deg)\n    }\n    100% {\n        transform rotate(360deg)\n    }\n`;\n\nconst keyFrameBodyRock = keyframes`\n    0% {\n        transform skew(0deg, 0deg)\n    }\n    25% {\n        transform skew(1deg, 0deg)\n    }\n    50% {\n        transform skew(0deg, 0deg)\n    }\n    100% {\n        transform skew(-1deg, 0deg)\n    }\n`;\n\nconst keyFrameArm = keyframes`\n    0% {\n        transform rotate(0deg)\n    }\n    50% {\n        transform rotate(30deg)\n    }\n    100% {\n        transform rotate(0deg)\n    }\n`;\n\nconst keyFrameHeadbop = keyframes`\n    0% {\n        transform: translate(0, 0)\n    }\n    50% {\n        transform: translate(0, -2px)\n    }\n    100% {\n        transform: translate(0, 0)\n    }\n`;\nconst keyFrameSignal = keyframes`\n    0% {\n        opacity: 1;\n        transform: scale(1);\n    }\n    90% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 0;\n        transform: scale(8);\n    }\n`;\n\nconst keyFrameEye = keyframes`\n    0% {\n        height: 20px;\n    }\n    10% {\n        height: 20px;\n    }\n    12% {\n        height: 0px;\n    }\n    15% {\n        height: 20px\n    }\n\n    80% {\n        transform scale(1);\n    }\n    82% {\n        transform scale(1.3);\n    }\n    87% {transform scale(1);\n    }\n    100% {\n        height: 20px;\n    }\n`;\n\nconst keyFrameJourney = keyframes`\n    0%{\n        /* transform: translate(0, 400px) */\n        transform: translate(0, 200%) scale(1) rotate(0deg)\n    }\n    7%{\n        /* transform: translate(0, 400px) */\n        transform: translate(0, 50%) scale(1.5) rotate(-30deg)\n    }\n    14%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(0, 50%) scale(1.5) rotate(-30deg)\n    }\n    18%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(0, 200%) \n    }\n    19%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(150%, 200%) scale(1)\n    }\n    20%{\n        /* transform: translate(0, 100px) */\n        transform:  translate(1000px, 0) rotate(-20deg)\n    }\n\n    99%{\n        /* transform: translate(0, 0) */\n        transform: translate(-1000px, 0) \n    }\n\n    100%{\n        /* transform: translate(0, 0) */\n        transform: translate(-1000px, 200%) rotate(0deg)\n    }\n`;\nconst ContentWrapperFloating = styled(ContentWrapper)`\n    position: absolute;\n    z-index: 2;\n    background: ${({\n        theme: {\n            colors: { blue },\n        },\n    }) => `linear-gradient(to bottom, ${blue} 85%, rgba(0,0,0,0)) 15%`};\n`;\n\nconst RobotWrapper = styled.div`\n    position: relative;\n    height: 600px;\n    width: 100%;\n    overflow: hidden;\n    z-index: 0;\n`;\nconst WholeRobot = styled.div`\n    position: absolute;\n    width: 200px;\n    height: 300px;\n    left: calc(50% - 200px / 2);\n    bottom: 0;\n    animation: ${keyFrameJourney} 10s linear 0s infinite;\n    z-index: 1;\n`;\n\nconst Neck = styled.div`\n    position: absolute;\n    width: 20px;\n    height: 40px;\n    background-color: #555;\n    border-radius: 6%;\n    left: calc(50% - 10px);\n    top: 100px;\n`;\n\nconst Arial = styled.div`\n    position: absolute;\n    width: 4px;\n    height: 30px;\n    background-color: #555;\n    border-radius: 6%;\n    left: calc(50% - 2px);\n    top: 20px;\n    animation: ${keyFrameHeadbop} 0.4s ease-in-out 0s infinite;\n`;\n\nconst BallEnd = styled.div`\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #555;\n    background: radial-gradient(#555, #888);\n    border-radius: 50%;\n    left: calc(50% - 5px);\n    top: 0;\n    animation: ${keyFrameHeadbop} 0.4s ease-in-out 0s infinite;\n`;\n\nconst Signal = styled.div`\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    background-color: #555;\n    background: radial-gradient(transparent, #888);\n    border-radius: 50%;\n    left: calc(50% - 15px);\n    top: 0;\n    animation: ${keyFrameSignal} 2s ease 0s infinite;\n`;\n\nconst RoboBody = styled.div`\n    position: absolute;\n    width: 140px;\n    height: 150px;\n    background: radial-gradient(#555, #888);\n    border-radius: 6%;\n    left: calc(50% - 140px / 2);\n    bottom: 24px;\n    animation: ${keyFrameBodyRock} 1s ease-in-out 0s infinite;\n`;\n\nconst Wheel1 = styled.div`\n    position: absolute;\n    width: 36px;\n    height: 40px;\n    background-color: #222;\n    border-radius: 50%;\n    left: 40px;\n    bottom: 0px;\n    animation: ${keyFrameWheelWobble} 0.8s linear 0s infinite;\n`;\n\nconst Wheel2 = styled.div`\n    position: absolute;\n    width: 40px;\n    height: 36px;\n    background-color: #222;\n    border-radius: 50%;\n    right: 40px;\n    bottom: 0px;\n    animation: ${keyFrameWheelWobble} 0.8s linear 0s infinite;\n`;\n\nconst WheelHub = styled.div`\n    position: absolute;\n    width: 20px;\n    height: 0;\n    border-left: 80px solid transparent;\n    border-right: 80px solid transparent;\n    border-bottom: 70px solid #666;\n    border-radius: 50px;\n    left: 10px;\n    bottom: 20px;\n    animation: ${keyFrameBodyRock} 1s ease-in-out 0s infinite;\n`;\n\nconst Arm = styled.div`\n    position: relative;\n    text-align: center;\n    width: 40px;\n    height: 100px;\n    margin-left: 80px;\n    margin-top: 150px;\n    transform-origin: top;\n    animation: ${keyFrameArm} 0.8s linear 0s infinite;\n`;\nconst ArmTop = styled.div`\n    position: absolute;\n    text-align: center;\n    left: 5px;\n    top: 0px;\n    height: 100px;\n    width: 30px;\n    background-color: #444;\n    border-radius: 10px;\n    box-shadow: 7px 10px 22px 0px rgba(0, 0, 0, 0.75);\n`;\n\nconst Hand = styled.div`\n    position: absolute;\n    right: 5px;\n    bottom: 0px;\n    height: 30px;\n    width: 60px;\n    border-radius: 50%;\n    background-color: #333;\n    border-radius: 10px;\n`;\n\nconst Head = styled.div`\n    position: absolute;\n    height: 65px;\n    width: 100px;\n    top: 50px;\n    left: 50px;\n    border-radius: 50%;\n    background-color: #777;\n    background: radial-gradient(#888, #555);\n    border-radius: 10px;\n    animation: ${keyFrameHeadbop} 0.4s linear 0s infinite;\n`;\nconst Face = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n`;\n\nconst EyeLeft = styled.div`\n    position: absolute;\n    height: 20px;\n    width: 20px;\n    top: 20px;\n    left: 20px;\n    border-radius: 50%;\n    background-color: #777;\n    background: radial-gradient(#333, #111);\n    border-radius: 10px;\n    animation: ${keyFrameEye} 4s linear 0s infinite;\n`;\n\nconst EyeRight = styled(EyeLeft)`\n    left: auto;\n    right: 20px;\n`;\n\nexport const RobotAnimation = () => {\n    return (\n        <RobotWrapper>\n            <WholeRobot>\n                <Neck />\n                <RoboBody />\n                <Wheel1 />\n                <Wheel2 />\n                <WheelHub />\n                <Arm>\n                    <Hand />\n                    <ArmTop />\n                </Arm>\n                <Signal />\n                <Arial>\n                    <BallEnd />\n                </Arial>\n                <Head>\n                    <Face>\n                        <EyeLeft />\n                        <EyeRight />\n                    </Face>\n                </Head>\n            </WholeRobot>\n            <ContentWrapperFloating>\n                <VerticalSpacer size='extraLarge' />\n                <H2 color='white'>A Robot</H2>\n                <VerticalSpacer size='medium' />\n                <Paragraph color='white'>\n                    It turns out that finding a decent animation libray that\n                    will play ball with TypeScript and React hooks is actaully a\n                    big ask. Those that do interesting tweens seem to rely on\n                    DOM events. All the others don't seem to do anything that\n                    CSS3 animations can't do out of the box. So I made this\n                    animation is plain old CSS.\n                </Paragraph>\n                <VerticalSpacer size='small' />\n            </ContentWrapperFloating>\n        </RobotWrapper>\n    );\n};\n\nexport default RobotAnimation;\n","import React from 'react';\n\nimport { H1, H2, Paragraph } from 'src/components/Typography';\nimport { PageWrapper, PageContent } from 'src/pages/styles';\nimport AnitmatedContentWrapper from 'src/components/AnitmatedContentWrapper';\nimport {\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport { RobotAnimation } from 'src/components/RobotAnimation';\n\nexport const Home = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock>\n                    <ContentWrapper>\n                        <VerticalSpacer size='extraExtraLarge' />\n                        <H1> welcome</H1>\n                        <VerticalSpacer size='large' />\n                        <Paragraph>\n                            Welcome to my front-end showcase. I originally\n                            created this site to try out TypeScript instead of\n                            using Flow. This was also an exersice to see if I\n                            could make a website using pure functional\n                            components and hooks without using classes and their\n                            lifecycle functions.\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue' padding={false}>\n                    <RobotAnimation />\n                </ColorBlock>\n\n                <ColorBlock color='darkGrey'>\n                    <AnitmatedContentWrapper>\n                        <H2 color='white'> under the hood</H2>\n\n                        <VerticalSpacer size='medium' />\n                        <Paragraph color='white'>\n                            React\n                            <br />\n                            React Router\n                            <br />\n                            Typescript\n                            <br />\n                            Styled components\n                            <br />\n                            Prettier\n                            <br />\n                        </Paragraph>\n                    </AnitmatedContentWrapper>\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nimport { colors } from 'src/theme';\nimport { PageWrapper, PageContent } from 'src/pages/styles';\nimport {\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport { H1, H2, H3, Span, Paragraph } from 'src/components/Typography';\n\nconst colorLabelList = Object.keys(colors);\n\nconst TilesWrapper = styled.div`\n    width: 100%;\n    /* overflow: hidden; */\n`;\nconst FlexWrapRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    margin: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => `-${small}`};\n`;\n\nconst ColorTileWrapper = styled.div`\n    padding: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => small};\n`;\n\nconst ColorTile = styled.div`\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px;\n    padding: ${({\n        theme: {\n            spacing: { small, extraLarge },\n        },\n    }) => `${extraLarge} ${small} ${small} ${small}`};\n    background-color: ${({ color }) => color};\n    width: 170px;\n`;\n\nconst ColorLabelWrapper = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    padding: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n`;\n\nconst camelCaseToSentenceCase = (text: string): string => {\n    const result = text.replace(/([A-Z])/g, ' $1');\n    return result.charAt(0).toUpperCase() + result.slice(1);\n};\n\nexport const DesignSystem = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock>\n                    <VerticalSpacer size='extraExtraLarge' />\n                    <ContentWrapper>\n                        <H1>Design System</H1>\n                        <VerticalSpacer size='large' />\n                        <H2>Colours</H2>\n                        <VerticalSpacer size='large' />\n                        <TilesWrapper>\n                            <FlexWrapRow>\n                                {colorLabelList.map(color => (\n                                    <ColorTileWrapper key={color}>\n                                        <ColorTile color={colors[`${color}`]}>\n                                            <ColorLabelWrapper>\n                                                <Span>\n                                                    {camelCaseToSentenceCase(\n                                                        color\n                                                    )}\n                                                    : {colors[`${color}`]}\n                                                </Span>\n                                            </ColorLabelWrapper>\n                                        </ColorTile>\n                                    </ColorTileWrapper>\n                                ))}\n                            </FlexWrapRow>\n                        </TilesWrapper>\n                    </ContentWrapper>\n                </ColorBlock>\n                <ColorBlock color='pink'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H2 color='white'>Typography</H2>\n                        <VerticalSpacer size='large' />\n                        <H1 color='white'>H1 Example text</H1>\n                        <VerticalSpacer size='large' />\n                        <H2 color='white'>H2 Example text</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>H3 Example text</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Paragraph example text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default DesignSystem;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport urls from 'src/urls';\n\nimport Home from 'src/pages/Home';\nimport DesignSystem from 'src/pages/DesignSystem';\n\nexport const Routes: React.FC = () => {\n    return (\n        <Switch>\n            <Route path={urls.designSystem} component={DesignSystem}></Route>\n            <Route exact={true} path={urls.home} component={Home}></Route>\n            {/* TODO 404 */}\n            {/* <Route path=\"*\">\n                    <NoMatch />\n                </Route> */}\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React, { useState, useMemo } from 'react';\nimport styled from 'styled-components/macro';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport { useScrollPosition } from 'src/hooks/UseScrollPosition';\nimport urls from 'src/urls';\n\nimport { H2, Paragraph } from 'src/components/Typography';\nimport { VerticalSpacer } from '../Layout';\n\nconst HeaderWrapper = styled.header`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 100vw;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n    transition: margin ease 0.2s, opacity ease 0.3s;\n    margin-top: ${({ visible }: { visible: boolean }) =>\n        visible ? `0` : `-100px`};\n    opacity: ${({ visible }: { visible: boolean }) => (visible ? `1` : `0`)};\n    z-index: 10;\n`;\n\nconst HeaderInner = styled.div`\n    margin: 0 auto;\n    background-color: ${({\n        theme: {\n            colors: { darkGrey },\n        },\n    }) => darkGrey};\n    padding: ${({\n        theme: {\n            spacing: { small },\n            globalPadding,\n        },\n    }) => `${small} ${globalPadding}`};\n`;\n\nconst Links = styled.ul`\n    padding: 0;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    justify-content: flex-start;\n\n    li {\n        padding: 0;\n        margin: ${({\n            theme: {\n                spacing: { small },\n            },\n        }) => `0 ${small} 0 0`};\n    }\n`;\n\nconst HoverInidcator = styled.div`\n    height: 3px;\n    background-color: ${({\n        theme: {\n            colors: { yellow },\n        },\n    }) => yellow};\n    margin-top: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n    width: 100%;\n    max-width: 0;\n    transition: max-width ease 0.3s;\n`;\n\nconst RowCenter = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst NavLinkStyled = styled(NavLink)`\n    text-decoration: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    ${Paragraph} {\n        transition: color ease 0.3s;\n        font-weight: 600;\n    }\n\n    &.selected {\n        ${HoverInidcator} {\n            max-width: 150px;\n        }\n    }\n\n    &:hover,\n    &:focus {\n        outline: none;\n\n        ${Paragraph} {\n            color: ${({\n                theme: {\n                    colors: { yellow },\n                },\n            }) => yellow};\n        }\n    }\n`;\n\nconst Header = () => {\n    const [hideOnScroll, setHideOnScroll] = useState(true);\n\n    useScrollPosition(\n        ({\n            prevPos,\n            currPos,\n        }: {\n            prevPos: { x: number; y: number };\n            currPos: { x: number; y: number };\n        }) => {\n            const isShow = currPos.y >= prevPos.y;\n            if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n        },\n        [hideOnScroll],\n        null,\n        false,\n        300\n    );\n\n    return useMemo(\n        () => (\n            <HeaderWrapper visible={hideOnScroll}>\n                <HeaderInner>\n                    <H2 color='white'>Showcase</H2>\n                    <VerticalSpacer size='medium' />\n                    <nav>\n                        <Links>\n                            <li>\n                                <NavLinkStyled\n                                    exact={true}\n                                    to={urls.home}\n                                    activeClassName='selected'\n                                >\n                                    <Paragraph color='white'>Home</Paragraph>\n                                    <RowCenter>\n                                        <HoverInidcator />\n                                    </RowCenter>\n                                </NavLinkStyled>\n                            </li>\n                            <li>\n                                <NavLinkStyled\n                                    to={urls.designSystem}\n                                    activeClassName='selected'\n                                >\n                                    <Paragraph color='white'>\n                                        Design System\n                                    </Paragraph>\n                                    <RowCenter>\n                                        <HoverInidcator />\n                                    </RowCenter>\n                                </NavLinkStyled>\n                            </li>\n                        </Links>\n                    </nav>\n                </HeaderInner>\n            </HeaderWrapper>\n        ),\n        [hideOnScroll]\n    );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\n\nimport Routes from 'src/Routes';\nimport Header from 'src/components/Header';\n\nconst App: React.FC = () => {\n    return (\n        <>\n            <Header />\n            <Routes />\n\n            {/* TODO FOOTER */}\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport theme from 'src/theme';\n\n// This is going to be where all the project level HOCs live\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <Router>\n            <App />\n        </Router>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}